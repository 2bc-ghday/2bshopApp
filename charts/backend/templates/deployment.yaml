apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    {{- include "backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "backend.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - |
              until nc -z {{ .Values.database.host }} {{ .Values.database.port }}; do
                echo "Waiting for database to be ready...";
                sleep 2;
              done;
              echo "Database is ready!";
        - name: run-prestart
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash", "scripts/prestart.sh"]
          env:
            - name: POSTGRES_SERVER
              value: {{ .Values.database.host | quote }}
            - name: POSTGRES_PORT
              value: {{ .Values.database.port | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.database.name | quote }}
            # Database credentials from secret
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "backend.fullname" . }}-db-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "backend.fullname" . }}-db-secrets
                  key: POSTGRES_PASSWORD
            # Application secrets
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "backend.fullname" . }}-secrets
                  key: SECRET_KEY
            - name: FIRST_SUPERUSER
              valueFrom:
                secretKeyRef:
                  name: {{ include "backend.fullname" . }}-secrets
                  key: FIRST_SUPERUSER
            - name: FIRST_SUPERUSER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "backend.fullname" . }}-secrets
                  key: FIRST_SUPERUSER_PASSWORD
            {{- if .Values.environment }}
            {{- range $key, $value := .Values.environment }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          {{- if .Values.configMap }}
          envFrom:
            - configMapRef:
                name: {{ include "backend.fullname" . }}-config
          {{- end }}

      containers:
        - name: backend
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          env:
            - name: POSTGRES_SERVER
              value: {{ .Values.database.host | quote }}
            - name: POSTGRES_PORT
              value: {{ .Values.database.port | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.database.name | quote }}
            # Database credentials from secret
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "backend.fullname" . }}-db-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "backend.fullname" . }}-db-secrets
                  key: POSTGRES_PASSWORD
            # Application secrets
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "backend.fullname" . }}-secrets
                  key: SECRET_KEY
            - name: FIRST_SUPERUSER
              valueFrom:
                secretKeyRef:
                  name: {{ include "backend.fullname" . }}-secrets
                  key: FIRST_SUPERUSER
            - name: FIRST_SUPERUSER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "backend.fullname" . }}-secrets
                  key: FIRST_SUPERUSER_PASSWORD
            {{- if .Values.environment }}
            {{- range $key, $value := .Values.environment }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          {{- if .Values.configMap }}
          envFrom:
            - configMapRef:
                name: {{ include "backend.fullname" . }}-config
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /api/v1/utils/health-check/
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /api/v1/utils/health-check/
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3